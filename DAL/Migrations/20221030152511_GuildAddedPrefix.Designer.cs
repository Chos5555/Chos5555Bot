// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20221030152511_GuildAddedPrefix")]
    partial class GuildAddedPrefix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Guild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ArchiveCategoryId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int?>("MemberRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Prefix")
                        .HasColumnType("text");

                    b.Property<decimal>("RuleMessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("RuleMessageText")
                        .HasColumnType("text");

                    b.Property<int?>("RuleRoomId")
                        .HasColumnType("integer");

                    b.Property<int?>("SelectionRoomId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserLeaveMessageRoomId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("MemberRoleId");

                    b.HasIndex("RuleRoomId");

                    b.HasIndex("SelectionRoomId");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("DAL.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActiveCheckRoomId")
                        .HasColumnType("integer");

                    b.Property<string>("ActiveEmote")
                        .HasColumnType("text");

                    b.Property<int?>("GameRoleGameId")
                        .HasColumnType("integer");

                    b.Property<int?>("GuildId")
                        .HasColumnType("integer");

                    b.Property<bool>("HasActiveRole")
                        .HasColumnType("boolean");

                    b.Property<int?>("MainActiveRoleGameId")
                        .HasColumnType("integer");

                    b.Property<int?>("ModAcceptRoomId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("SelectionMessageId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("ActiveCheckRoomId");

                    b.HasIndex("GameRoleGameId");

                    b.HasIndex("GuildId");

                    b.HasIndex("MainActiveRoleGameId");

                    b.HasIndex("ModAcceptRoomId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DAL.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActiveRoleGameId")
                        .HasColumnType("integer");

                    b.Property<string>("ChoiceEmote")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("DisordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int?>("ModAcceptRoleGameId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("NeedsModApproval")
                        .HasColumnType("boolean");

                    b.Property<bool>("Resettable")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ActiveRoleGameId");

                    b.HasIndex("ModAcceptRoleGameId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DAL.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int?>("GameId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DAL.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GuildId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("DAL.Guild", b =>
                {
                    b.HasOne("DAL.Role", "MemberRole")
                        .WithMany()
                        .HasForeignKey("MemberRoleId");

                    b.HasOne("DAL.Room", "RuleRoom")
                        .WithMany()
                        .HasForeignKey("RuleRoomId");

                    b.HasOne("DAL.Room", "SelectionRoom")
                        .WithMany()
                        .HasForeignKey("SelectionRoomId");

                    b.Navigation("MemberRole");

                    b.Navigation("RuleRoom");

                    b.Navigation("SelectionRoom");
                });

            modelBuilder.Entity("DAL.Model.Game", b =>
                {
                    b.HasOne("DAL.Room", "ActiveCheckRoom")
                        .WithMany()
                        .HasForeignKey("ActiveCheckRoomId");

                    b.HasOne("DAL.Role", "GameRole")
                        .WithMany()
                        .HasForeignKey("GameRoleGameId");

                    b.HasOne("DAL.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId");

                    b.HasOne("DAL.Role", "MainActiveRole")
                        .WithMany()
                        .HasForeignKey("MainActiveRoleGameId");

                    b.HasOne("DAL.Room", "ModAcceptRoom")
                        .WithMany()
                        .HasForeignKey("ModAcceptRoomId");

                    b.Navigation("ActiveCheckRoom");

                    b.Navigation("GameRole");

                    b.Navigation("Guild");

                    b.Navigation("MainActiveRole");

                    b.Navigation("ModAcceptRoom");
                });

            modelBuilder.Entity("DAL.Role", b =>
                {
                    b.HasOne("DAL.Model.Game", null)
                        .WithMany("ActiveRoles")
                        .HasForeignKey("ActiveRoleGameId");

                    b.HasOne("DAL.Model.Game", null)
                        .WithMany("ModAcceptRoles")
                        .HasForeignKey("ModAcceptRoleGameId");
                });

            modelBuilder.Entity("DAL.Room", b =>
                {
                    b.HasOne("DAL.Model.Game", null)
                        .WithMany("Rooms")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("DAL.Song", b =>
                {
                    b.HasOne("DAL.Guild", null)
                        .WithMany("Songs")
                        .HasForeignKey("GuildId");
                });

            modelBuilder.Entity("DAL.Guild", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("DAL.Model.Game", b =>
                {
                    b.Navigation("ActiveRoles");

                    b.Navigation("ModAcceptRoles");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
